// PopNoticeDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "WLRClient.h"
#include "PopNoticeDlg.h"
#include "header.h"

// CPopNoticeDlg 对话框

IMPLEMENT_DYNAMIC(CPopNoticeDlg, CDialog)
static int nlen;
static int nTemp;
CPopNoticeDlg::CPopNoticeDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CPopNoticeDlg::IDD, pParent)
{
    posX = 800;
    posY = 600;
	nlen = 0;
	nTemp = 0;
	m_popclose = FALSE;
    //showMsg = "\n【系统公告】您的代理商的联系电话为：13600136000\n";
}

CPopNoticeDlg::~CPopNoticeDlg()
{
}

void CPopNoticeDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_STATIC_SYS, m_HyperLink1);
	DDX_Control(pDX, IDC_STATIC_AG, m_hyperAG);
}

DWORD WINAPI ThreadAG(LPVOID lpVoid)
{
	CPopNoticeDlg * dlg = (CPopNoticeDlg*)lpVoid;
	while(1)
	{
		if(m_bClose)
			break;
		//dlg->DrawScrollerText();
		
		try
		{
			if (dlg->m_popclose)
			{
				break;
			}
			CRect rect1,rc,rectall;
			dlg->GetClientRect(&rectall);
			dlg->m_HyperLink1.GetWindowRect(&rect1);
			dlg->ScreenToClient(&rect1);
			dlg->m_hyperAG.GetWindowRect(&rc);
			dlg->ScreenToClient(&rc);

			if (rc.bottom <= 0)
			{
				nlen = 0;
				nTemp = 0;
				dlg->m_HyperLink1.SetWindowPos(NULL,rect1.left,rectall.bottom,rect1.Width(),rect1.Height(),SWP_SHOWWINDOW);
			}
			else
				dlg->m_HyperLink1.SetWindowPos(NULL,rect1.left,rect1.top-nlen,rect1.Width(),rect1.Height(),SWP_SHOWWINDOW);

			TRACE("%d\n",nlen);

			dlg->m_HyperLink1.GetWindowRect(&rect1);
			dlg->ScreenToClient(&rect1);

			dlg->m_hyperAG.SetWindowPos(NULL,rect1.left,rect1.bottom+5,rc.Width(),rc.Height(),SWP_SHOWWINDOW);

			dlg->m_HyperLink1.Invalidate();
			dlg->m_hyperAG.Invalidate();
			nTemp += 1;
			nlen = nTemp /200;
		}
		catch (...)
		{
			
		}
		Sleep(25);
	}
	return 0;
}
BEGIN_MESSAGE_MAP(CPopNoticeDlg, CDialog)
    ON_WM_CREATE()
    ON_WM_DESTROY()
    ON_WM_CLOSE()
	ON_WM_ERASEBKGND()
	ON_WM_PAINT()
	ON_WM_TIMER()
END_MESSAGE_MAP()


// CPopNoticeDlg 消息处理程序

int CPopNoticeDlg::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
    if (CDialog::OnCreate(lpCreateStruct) == -1)
        return -1;

    // TODO:  在此添加您专用的创建代码

    CRect rect;
    GetClientRect(&rect);
	
    //MoveWindow(posX - rect.Width(), posY - rect.Height(), rect.Width(), rect.Height());//
	SetWindowPos(NULL,posX - rect.Width(), posY - rect.Height(), rect.Width(), rect.Height(),SWP_SHOWWINDOW);
	//AnimateWindow(1000, AW_SLIDE|AW_VER_NEGATIVE);

    return 0;
}

BOOL CPopNoticeDlg::OnInitDialog()
{
    CDialog::OnInitDialog();

    // TODO:  在此添加额外的初始化    

    // 设置背景色
    m_scroller.SetBgColor(RGB(199, 237, 204));
    // 设置字体
    m_scroller.SetFont("黑体", 11, 600);
    // 设置文字颜色
    m_scroller.SetFgColor(RGB(0, 0, 255));
    // 设置信息内容
    m_scroller.SetText(showMsg);
    // 滚动速度：延迟20ms
    m_scroller.SetScrollDelay(20);
    // 暂停时间：内容显示结束暂停
    m_scroller.SetScrollPause(3000);

    CRect rect;
	GetClientRect(&rect);
	m_scroller.Create(rect, this);


	LOGFONT logFont;
	//内容字体设置
	logFont.lfHeight =-15;
	logFont.lfWidth = 0;
	logFont.lfEscapement = 0;
	logFont.lfOrientation = 0;
	logFont.lfWeight = 400;
	logFont.lfItalic = 0;
	logFont.lfUnderline = 0;
	logFont.lfStrikeOut = 0;
	logFont.lfCharSet = ANSI_CHARSET;
	logFont.lfOutPrecision = OUT_DEFAULT_PRECIS;
	logFont.lfClipPrecision = CLIP_DEFAULT_PRECIS;
	logFont.lfQuality = PROOF_QUALITY;
	logFont.lfPitchAndFamily = VARIABLE_PITCH | FF_ROMAN;
	strcpy(logFont.lfFaceName,"宋体");


	m_HyperLink1.SetWindowText(showMsg);
	m_HyperLink1.SetLinkUrl(_T(""));
	m_HyperLink1.SetMultiline(TRUE);
	m_HyperLink1.SetAutoGenerateDisabled(TRUE);
	m_HyperLink1.SetBackgroundColor(RGB(199, 237, 204));
	m_HyperLink1.SetFont(&logFont);

	m_hyperAG.SetWindowText(showMsgAG);
	m_hyperAG.SetLinkUrl(_T(""));
	m_hyperAG.SetMultiline(TRUE);
	m_hyperAG.SetAutoGenerateDisabled(TRUE);
	m_hyperAG.SetBackgroundColor(RGB(199, 237, 204));
	m_hyperAG.SetFont(&logFont);


	//m_HyperLink1.SetBorderColor(RGB(199, 237, 204));
	m_HyperLink1.Invalidate();
	m_hyperAG.Invalidate();
	Invalidate();

	//SetTimer(1,10,NULL);
	//HANDLE hThread = CreateThread(NULL, 0, ThreadAG, this, 0, NULL);
    return TRUE;  // return TRUE unless you set the focus to a control
    // 异常: OCX 属性页应返回 FALSE
}

void CPopNoticeDlg::PostNcDestroy()
{
    // TODO: 在此添加专用代码和/或调用基类

    CDialog::PostNcDestroy();
    
    delete this;
}

void CPopNoticeDlg::OnDestroy()
{
    CDialog::OnDestroy();

    // TODO: 在此处添加消息处理程序代码
    //delete this;
}

void CPopNoticeDlg::OnClose()
{
    // TODO: 在此添加消息处理程序代码和/或调用默认值

    CDialog::OnClose();
	m_popclose = TRUE;
	WaitForSingleObject(ThreadAG,INFINITE);
    DestroyWindow();
}

BOOL CPopNoticeDlg::OnEraseBkgnd(CDC* pDC)
{
	// TODO: 在此添加消息处理程序代码和/或调用默认值
	CRect rect;
	GetClientRect(&rect);
	pDC->FillRect(&rect, &CBrush(RGB(199, 237, 204)));
	return 0;

	//return CDialog::OnEraseBkgnd(pDC);
}

void CPopNoticeDlg::OnPaint()
{
	CPaintDC dc(this); // device context for painting


	/*CRect rect1,rc;
	m_HyperLink1.GetWindowRect(&rect1);
	ScreenToClient(&rect1);
	m_hyperAG.GetClientRect(&rc);
	m_hyperAG.SetWindowPos(NULL,rect1.left,rect1.bottom+5,rc.Width(),rc.Height(),SWP_SHOWWINDOW);
	m_HyperLink1.Invalidate();
	m_hyperAG.Invalidate();*/
	//RedrawWindow()
	//Invalidate();
	// TODO: 在此处添加消息处理程序代码
	// 不为绘图消息调用 CDialog::OnPaint()
}

void CPopNoticeDlg::OnTimer(UINT_PTR nIDEvent)
{
	// TODO: 在此添加消息处理程序代码和/或调用默认值
	if (nIDEvent == 1)
	{
		static int nlen = 0;
		static int nTemp = 0;
		CRect rect1,rc,rectall;
		GetClientRect(&rectall);
		m_HyperLink1.GetWindowRect(&rect1);
		ScreenToClient(&rect1);
		m_hyperAG.GetWindowRect(&rc);
		ScreenToClient(&rc);

		if (rc.bottom <= 0)
		{
			nlen = 0;
			nTemp = 0;
			m_HyperLink1.SetWindowPos(NULL,rect1.left,rectall.bottom,rect1.Width(),rect1.Height(),SWP_SHOWWINDOW);
		}
		else
			m_HyperLink1.SetWindowPos(NULL,rect1.left,rect1.top-nlen,rect1.Width(),rect1.Height(),SWP_SHOWWINDOW);

		TRACE("%d\n",nlen);

		m_HyperLink1.GetWindowRect(&rect1);
		ScreenToClient(&rect1);

		m_hyperAG.SetWindowPos(NULL,rect1.left,rect1.bottom+5,rc.Width(),rc.Height(),SWP_SHOWWINDOW);

		m_HyperLink1.Invalidate();
		m_hyperAG.Invalidate();
		nTemp += 1;
		nlen = nTemp /200;
	}
	CDialog::OnTimer(nIDEvent);
}
